'''
작성일 : 10월 18일
학과 : 컴퓨터공학
학번 : 202395010
이름 : 김재현
설명 : 7장 리스트
'''
#과일 리스트 만들기
fr=["사과","바나나","딸기"]
print("과일 목록 : ",fr)

#수박 추가
fr.append("수박")
print("과일 목록 수추 : ",fr)
fr.append("망고")
print("과일 목록 망추 : ",fr)

#포도 추가 => +연산자 사용
fr=fr+["포도"]
print("과일 목록 포추 : ",fr)

#리스트에서 +는 연결이다
num=[1,2,3]+[4,5,6]
print("숫자 리스트 : ",num)

#*연산자=>리스트를 n번 반복한다
num=[1,2,3]*3
print("숫자 리스트 *3 : ",num)

#in연산자=>포함되는가
print("과일 목록에 망고가 있나요 : ","망고" in fr)

'''
인덱스를 사용하여 리스트의 항목에 접근하기 178쪽
'''
#과일 리스트에 있는 과일의 개수?
print("과일 리스트에 있는 과일 개수 : ",len(fr))

#과일 리스트 중 제일 첫 번째 과일은?
print("과일 리스트 중 제일 첫 번째 과일은? : ",fr[0])

#과일 리스트 중 제일 마지막 번째 과일은?
print("과일 리스트 중 제일 마지막 번째 과일은? : ",fr[-1])#-1은 리스트의 마지막 항목에 접근

#과일 중 가장 큰 과일은?
print("과일 중 가장 큰 과일은?(사전식 순서)", max(fr))

#과일 중 가장 작은 과일은?
print("과일 중 가장 작은 과일은?(사전식 순서)", min(fr))

#정렬
fr.sort()#오름차순
print("오름차순 정렬",fr)

fr.sort(reverse=True)#내림차순
print("내림차순 정렬",fr)

'''
리스트를 원하는 모양으로 자르는 슬라이싱
'''
print("과일 목록 : ",fr)
print("과일 리스트중 2,3,4번 과일은 : ",fr[1:4])
print("과일 리스트중 1~3번 과일은 : ",fr[0:3])#0번지~2번지
print("과일 리스트중 1~3번 과일은 : ",fr[:3])#처음부터 2번지 까지
print("과일 리스트 중 3번 과일부터 마지막 까지 과일은?",fr[2:])#2번지 부터 마지막 까지

#처음부터 끝까지 리스트중에서 2씩 증가하면서
print("과일 리스트중 1,3,5번 과일은 : ",fr[::2])
print("과일 거꾸로 출력 : ",fr[::-1])

'''
리스트의 원소 값을 자유롭게 조작해 보자
'''
print()
print("과일 목록 :",fr)

#원하는 위치에 '두리안' 추가 => insert 메소드
fr.insert(3,'두리안')
print("과일 목록(3번지에 두리안 추가) :",fr)

#위치 찾기 => index()메소드
print("사과의 위치는?",fr.index('사과'))

#사과를 마지막에 추가
fr.append("사과")
print("과일 목록(마지막에 사과 추가) :",fr)

#사과의 개수 => count()메소드
print("사과의 개수는?",fr.count("사과"))

'''
리스트의 항목 삭제
'''
print()

#사과 삭제
fr.remove("사과")#처음만나는사과만삭제
print("과일 목록(사과 삭제) :",fr)

#항목 삭제 => pop() 메소드
fr.pop()#마지막 항목 삭제
print("과일 목록(마지막 과일 삭제) :",fr)

#del() 키워드 => 포도 삭제
del fr[0]#0번지 항목 삭제
print("과일 목록(포도(0번지) 삭제) :",fr)
